{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs20 \cf0 # individual project\
# Intelligent Systems (ISAT 344)\
# 2013.11.3\
# \
# PART 1: this script defines the web crawler and saves the data it collects to disk\
\
from scrapy.spider import BaseSpider\
from scrapy.selector import HtmlXPathSelector\
from scrapy.contrib.linkextractors.sgml import SgmlLinkExtractor\
from scrapy.http import Request\
\
from individualProject.items import ProjectItem\
\
class TheScienceForum(BaseSpider):\
    name = "TheScienceForum.com"\
    allowed_domains = ["www.thescienceforum.com"]\
    start_urls = ["http://www.thescienceforum.com"]\
\
    # extract desired URL (apge with additional info)\
    # pass extracted data via meta parameter \
    # return a request object#createreturn items \
\
    # method for parsing home page and navigating to first page of each forum\
    def parse(self, response):\
        # instantiate selector for grabbing html bits\
        Sel = HtmlXPathSelector(response)\
        forumNames = Sel.select('//h2[@class="forumtitle"]/a/text()').extract()\
\
        forums = Sel.select('//h2[@class="forumtitle"]/a/@href').extract()\
    \
        # yield requests for each forum page\
        for forum in forums:\
            yield Request(url=forum,callback=self.addThreadNames)\
\
    # method for parsing forum pages and getting links all other pages within the forum       \
    def addThreadNames(self, response):\
        Sel = HtmlXPathSelector(response)\
        currentForum = Sel.select('//span[@class="forumtitle"]/text()').extract()\
\
        # instantiate and populate item (defined in another class)\
        item = ProjectItem()\
        item['name'] = currentForum[0]\
        item['titles'] = Sel.select('//h3[@class="threadtitle"]/a/text()').extract()\
        \
        # find and yield requests for further forum pages\
        threadPageNavs = Sel.select('//span[@class="prev_next"]/a[@rel="next"]/@href').extract()\
        if len(threadPageNavs) > 0:\
            for threadPageNav in threadPageNavs:  \
                yield Request(url=threadPageNav,callback=self.addThreadNames)\
        # yield item define above\
        yield item      }